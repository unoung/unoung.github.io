{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","edges":[{"node":{"id":"d3452235-504b-5d59-886a-5fce1a8c3996","excerpt":"expo-router란? 1. 파일기반의 라우팅 expo-router는 파일기반의 라우팅으로, 파일과 디렉토리에 따라서 자동으로 경로가 생성된다 예를 들어 ‘app/home.js’ 파일이라면 ‘/home’ 경로가 된다. 중괄호는 경로에 포함되지 않으며 생략된다 예를 들어 (auth) 폴더의 login.js 파일은 경로가 ‘/login’으로 지정된다 대괄호는 동적 경로 지정이 가능하다\n 3. 기능 및 장점 코드 분할 : 페이지 단위의 코드를 분할해서 작성 할 수 있다 deep linking: 딥링크가 자동으로 가능 SEO 친화적 Tab navigator, Stack navigator 등 다양한 네비게이션 옵션 사용 가능 4. router object 종류 navigate : 이미 같은 경로에 있는 경우 새로운 화면을 추가하지 않고, 기존화면 재사용 push : 스택에 새로운 화면을 추가. 동일 경로로 push하면 스택 쌓임 -> 주의: 여러번 같은 경로 누르면 동일화면이 여러번 중첩…","fields":{"slug":"/study-expo-1/"},"frontmatter":{"categories":"expo","title":"Expo-router","date":"August 28, 2024"}},"next":{"fields":{"slug":"/study-algorithms-1/"}},"previous":null},{"node":{"id":"d95f4f2e-6e40-5d8a-9256-5188002e0864","excerpt":"자료구조(Data Structure)란? 자료구조는 다수의 **자료(data)**를 담기 위한 구조다. 데이터의 수가 많아질수록 효율적인 자료구조가 필요하다. 성능비교: 자료구조/알고리즘의 성능 측정 방법에 대해 이해할 필요가 있다. 1. 선형 구조(linear data structure) 하나의 데이터 뒤에 다른 데이터가 하나 존재하는 자료구조 \n데이터가 일렬로 연속적으로 연결되어 있다. 배열 (array) 연결 리스트(linked list) 스택(stack) 큐(queue) 2. 비선형 구조(non-linear data structure) 하나의 데이터 뒤에 다른 데이터가 여러 개 올 수 있는 자료구조 \n데이터가 일직선상으로 연결되어 있지 않아도 된다. 트리(tree) 그래프(graph) 프로그램의 성능 측정 방법 시간 복잡도(time complexity) : 알고리즘에 사용되는 연산횟수를 측정 공간 복잡도(space complexity) : 알고리즘에 사용되는 메모리 양을 측…","fields":{"slug":"/study-algorithms-1/"},"frontmatter":{"categories":"알고리즘","title":"자료구조(Data Structure)","date":"May 20, 2023"}},"next":null,"previous":{"fields":{"slug":"/study-expo-1/"}}}],"categories":["All","expo","알고리즘"]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}